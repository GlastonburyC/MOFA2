library(MOFA2)
library(MultiAssayExperiment)
mae <- readRDS("~/Downloads/myMultiAssay.rds")
library(MOFA2)
colData(mae)
mofa <- create_mofa(mae, groups = "group_variable")
mofa
source('~/MOFA2/MOFA2/R/QC.R', echo=TRUE)
source('~/MOFA2/MOFA2/R/utils.R', echo=TRUE)
mofa <- create_mofa(mae, groups = "group_variable")
data <- mae
groups
groups = "group_variable"
save_metadata = FALSE
# Re-arrange data for training in MOFA to matrices, fill in NAs
data_list <- lapply(names(data), function(m) {
# Extract general sample names
primary <- unique(sampleMap(data)[,"primary"])
# Extract view
subdata <- assays(data)[[m]]
# Rename view-specific sample IDs with the general sample names
stopifnot(colnames(subdata)==sampleMap(data)[sampleMap(data)[,"assay"]==m,"colname"])
colnames(subdata) <- sampleMap(data)[sampleMap(data)[,"assay"]==m,"primary"]
# Fill subdata with NAs
subdata_filled <- .subset_augment(subdata, primary)
return(subdata_filled)
})
source('~/MOFA2/MOFA2/R/create_mofa.R', echo=TRUE)
# Re-arrange data for training in MOFA to matrices, fill in NAs
data_list <- lapply(names(data), function(m) {
# Extract general sample names
primary <- unique(sampleMap(data)[,"primary"])
# Extract view
subdata <- assays(data)[[m]]
# Rename view-specific sample IDs with the general sample names
stopifnot(colnames(subdata)==sampleMap(data)[sampleMap(data)[,"assay"]==m,"colname"])
colnames(subdata) <- sampleMap(data)[sampleMap(data)[,"assay"]==m,"primary"]
# Fill subdata with NAs
subdata_filled <- .subset_augment(subdata, primary)
return(subdata_filled)
})
dim(data_list[[1]])
dim(data_list[[2]])
# Define groups
if (is(groups, 'character') && (length(groups) == 1)) {
if (!(groups %in% colnames(colData(data))))
stop(paste0(groups, " is not found in the colData of the MultiAssayExperiment.\n",
"If you want to use groups information from MultiAssayExperiment,\n",
"please ensure to provide a column name that exists. The columns of colData are:\n",
paste0(colnames(colData(data)), collapse = ", ")))
groups <- colData(data)[,groups]
}
groups
is.null(groups)
message("No groups provided as argument, we assume that all samples belong to the same group.\n")
(is.null(groups))
# Initialise MOFA object
object <- new("MOFA")
object@status <- "untrained"
object@data <- .split_data_into_groups(data_list, groups)
object@data
lapply(object@data,dim)
lapply(object@data,shape)
lapply(object@data[[1]],dim)
table(mae$group_variable)
source('~/MOFA2/MOFA2/R/create_mofa.R', echo=TRUE)
mofa <- create_mofa(mae, groups = "group_variable")
plot_data_overview(mofa)
library(MultiAssayExperiment)
library(MOFA2)
mofa <- readRDS("~/Downloads/MOFAobject_group.rds")
plot_data_overview(mofa)
mofa@data$Whole_blood_rnaseq$DPSO_0_24[1:5,1:5]
run_mofa(mofa)
reticulate::py_config()
